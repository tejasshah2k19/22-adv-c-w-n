
client --> server --> dbServer 


client --> server -->inServer 
                  -->usaServer 

nTier  


tools 

	ide eclipse 
	browser 
	server - apache tomcat 
	db  - mysql 



server -- computer -> jdk jre -> tomcat -> webapp- > war ->bin start

windows 
linux 
mac 

-------------------------------

servlet 

class 

thread?
class A extends Thread{

}

MVC design pattern -> model - view - controller 

controller 
Servlet -> interface 


	Servlet  - servlet-api.jar 
	GenericServlet 
	HttpServlet 
	
1) class extends HttpServlet
2) override -> service
3) web.xml -> mapping   

right click on project -> properties ->java build path -> lib tab ->  add external jar -> browse to the 
apachetomcat/lib -> select servlet-api.jar -> order and export tab -> select all -> apply close -> done 


javax -> 

for each feature / functionality we need to create servlet 





java - html 

jsp -> java server pages , java servlet page 

html + java 


	scriptlet 
	<%
		//scriptlet 
		int a = 10;
		out.print(a + "<Br>");

		Date d = new Date();
		out.print(d);
	%>


	expression 
	<br>
	<%=a%>
	<br>
	<%=d%>
	
	
	
1) <% %> scriptlet 
2) <%=  %> expression
3) <%! %> declaration
	

HTML -> X java -> print ? 
 
servlet -> validation -> error set -> Signup.html -> key get 

servlet -> validation -> error set -> Signup.jsp -> key get 

servlet -> jsp => hard coded -> reqest.setAttribute()

jsp has 9 implicit object -> 1) request 2) out 


js cookie -> access ! 

FrontEnd -> js disable -> 

BackEnd ->  

-------------------
										
										
50		SignupServlet		Server	tomcat	web.xml 		SignupServlet		
				50 request 		SignupServlet 				
										
							1	load class		
							2	create instance	thread	
						1	3	init( )	db open 	Third party api 
						n	4	service( )		
						1	5	destroy() 	db close 	close 


-------------------

icici -> pakistan 


s.jsp -> 500 -> servlet -> 250 | 250 correct -> db 

1) implements Filter 
2) override method
3) web.xml mapping 


filter->folder 
com.filter 
	class RegistrationValidationFilter implements Filter{ //javax.servlet 
			init 
			destroy 
			doFilter(request,response,chain) {
				s.o.p("filter");
			}
	
	}
	
<filter>
	<filter-name>RegistrationValidationFilter</filter-name>
	<filter-class>com.filter.RegistrationValidationFilter</filter-class>
</filter>

<filter-mapping>
	<filter-name>RegistrationValidationFilter</filter-name>
	<url-pattern>/RegistrationServlet</url-pattern>
	<servlet-name>RegistrationServlet</servlet-name>
	<url-pattern>/*</url-pattern>
	<url-pattern>/admin/*</url-pattern>
	
</filter-mapping>


Registration.jsp 
	action="RegistrationServlet" 
	
	submit 



------------------------
jsp -> java servlet page  / java server pages

servlet container / apache tomcat / web server 

.jsp -> 
1) translation   .jsp -> .java 
2) compilation	 .java -> .class 
3) load class
4) create instance
5) jspInit()
6) _jspService()  [ method prfix _ => you are not allowed to override this method ] 
7) jspDestroy()


M : data  -> bean dao 
V : view  -> jsp 
C : controller -> Servlet 

--------------------------------

AddBook.jsp 
	Validation
	directly navigate 
	chrome browser  
			



























